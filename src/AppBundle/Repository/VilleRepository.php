<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Ville;

/**
 * VilleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VilleRepository extends \Doctrine\ORM\EntityRepository {

    public function searchVille($cp) {
        $queryBuilder = $this->createQueryBuilder('v')
                ->where("v.codePostal = '" . $cp . "' ")
                ->orderBy('v.ville', 'ASC')
                ->getQuery();
        //var_dump($queryBuilder->getSql());	            
        return $queryBuilder->getResult();
    }

    public function getListDepartements() {

        $select = "SELECT v ";
        $from = "FROM AppBundle:Ville v GROUP BY v.nomDepartement ORDER BY v.nomDepartement ";
        $query = $this->getEntityManager()->createQuery($select . $from);

        $r = array();
        $deps = $query->getResult();
        foreach ($deps as $dep) {
            $r[$dep->getNumDepartement()] = $dep->getNomDepartement();
        }

        return $r;
    }

    public function getOneDepartements($id) {

        $select = "SELECT v.nomDepartement, v.numDepartement ";
        $from = "FROM AppBundle:Ville v WHERE CONCAT(v.numDepartement, ' ', v.nomDepartement) LIKE '%".$id."%' GROUP BY v.nomDepartement ORDER BY v.nomDepartement ";
        $query = $this->getEntityManager()->createQuery($select . $from);
        $deps = $query->getResult();

        return $deps;
    }

    public function getListDepartementsForDisplay() {

        $select = "SELECT v ";
        $from = "FROM AppBundle:Ville v GROUP BY v.nomDepartement ORDER BY v.numDepartement ";
        $query = $this->getEntityManager()->createQuery($select . $from);

        $ret = array();
        $deps = $query->getResult();
        foreach ($deps as $dep) {
            $r['id'] = $dep->getNumDepartement();
            $r['text'] = (sprintf("%02d", $dep->getNumDepartement()).' '.$dep->getNomDepartement());
            $ret[] = $r;
        }

        return $ret;
    }


    public function getListDepartementsReverse() {

        $select = "SELECT v ";
        $from = "FROM AppBundle:Ville v GROUP BY v.nomDepartement ORDER BY v.nomDepartement ";
        $query = $this->getEntityManager()->createQuery($select . $from);

        $r = array(
            'TOUTE France' => "TOUTE France"
        );
        $deps = $query->getResult();
        foreach ($deps as $dep) {
            $r[$dep->getNomDepartement().' ('.$dep->getNumDepartement().')'] = $dep->getNomDepartement();
        }

        return $r;
    }

    public function getVilleByDepartement($numDep) {
        //SELECT * FROM `ville` WHERE ville LIKE CONCAT((SELECT chef_lieu FROM ville WHERE num_departement = 1 LIMIT 1), '%') AND chef_lieu = (SELECT chef_lieu FROM ville WHERE num_departement = 1 LIMIT 1)

        $query = $this->getEntityManager()->createQuery("SELECT v.chefLieu FROM AppBundle:Ville v WHERE v.numDepartement = " . $numDep)->setMaxResults(1);
        $v = $query->getOneOrNullResult();

        if ($v) {
            $chefLieu = $v['chefLieu'];
            if ($chefLieu) {
                $select = 'SELECT v ';
                $from = "FROM AppBundle:Ville v ";
                $where = "WHERE v.ville LIKE '" . $chefLieu . "%' AND v.chefLieu = '" . $chefLieu . "' ";
                $query = $this->getEntityManager()->createQuery($select . $from . $where)->setMaxResults(1);
                return $query->getOneOrNullResult();
            }
        }

        return NULL;
    }

    public function getVilleByVille($ville) {
    
    	return $this->createQueryBuilder('v')
            ->select('v')
            ->where('v.ville LIKE :ville')
            ->setParameter('ville', $ville)
            ->setMaxResults(1)
            ->getQuery()
			->getOneOrNullResult();

    
        /*$select = 'SELECT v ';
        $from = "FROM AppBundle:Ville v ";
        $where = "WHERE v.ville LIKE '" . $ville . "%'  ";
        $query = $this->getEntityManager()->createQuery($select . $from . $where)->setMaxResults(1);
        return $query->getOneOrNullResult();*/

    }
    /**
     * Récupère tous les départements et les ajoutent dans un tableau pour faire correspondre avec select2
     * @return array
     */
    public function getListDepartementsAlert() {

        $select = "SELECT v ";
        $from = "FROM AppBundle:Ville v GROUP BY v.nomDepartement ORDER BY v.nomDepartement ";
        $query = $this->getEntityManager()->createQuery($select . $from);

        $r = array();
        $deps = $query->getResult();
        foreach ($deps as $dep) {
            /**
             * @var Ville $dep
             */
            $r[$dep->getNomDepartement().' ('.sprintf("%02d", $dep->getNumDepartement()).')'] = $dep->getNumDepartement();
        }

        return $r;
    }

}
